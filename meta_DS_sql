https://bertmclee.medium.com/2024-%E7%BE%8E%E5%9C%8B%E5%9C%B0%E7%8D%84%E6%A8%A1%E5%BC%8F%E4%B8%8A%E5%B2%B8ds-mle%E7%B6%93%E9%A9%97%E5%88%86%E4%BA%AB-%E8%B2%B3-%E5%A6%82%E4%BD%95%E6%BA%96%E5%82%99meta-product-case%E9%9D%A2%E8%A9%A6-2e2e2730eca0

Table: messages

sender_id | receiver_id | send_date   | message_id | message_length
----------|-------------|-------------|------------|---------------
101       | 202        | '2023-04-01' | 1001       | 150
102       | 203        | '2023-04-01' | 1002       | 200
101       | 204        | '2023-04-01' | 1003       | 120

Table: users

user_id | signup_date | country | primary_device | active_flag | last_active_date
--------|-------------|---------|----------------|-------------|-----------------
101     | '2022-01-01'| US      | Android        | 1           | '2023-04-01'
102     | '2023-01-02'| GB      | iOS            | 1           | '2023-04-01'
203     | '2022-12-15'| US      | iOS            | 1           | '2023-03-30'
204     | '2022-11-10'| CA      | Android        | 0           | '2023-03-25'

Q1: Calculate the average message length sent by active users in the last 30 days.

clarify, Should the 30-day window be inclusive or exclusive? 

select 
avg(message_length) as avg_message_length
from users u
inner join messages m on u.user_id = m.sender_id
where u.active_flag = 1
and datediff(days,m.send_date,current_date) <=30

select 
avg(message_length) as avg_message_length
from users u
inner join messages m on u.user_id = m.sender_id
where u.active_flag = 1
and m.send_date >= current_date - interval '30' Day;


Q2: Identify the top 5 users who sent the most messages in the last month.
Clarification question
By 'most messages, do we mean the highest frequency (number of messages sent) or the total length of messages? I assume it should be frequency?"
Should ties be handled? determine whether we should use using DENSE_RANK() or RANK()? 
Do we need to consider factors like country or primary device when ranking users?


WITH base AS (
    SELECT sender_id, COUNT(*) AS m_count
    FROM messages 
    WHERE send_date >= DATE_TRUNC('month', CURRENT_DATE - INTERVAL '1 month')
      AND send_date < DATE_TRUNC('month', CURRENT_DATE)
    GROUP BY sender_id
),
ranked AS (
    SELECT 
        sender_id,
        m_count,
        DENSE_RANK() OVER (ORDER BY m_count DESC) AS rank_num
    FROM base
)
SELECT sender_id, m_count, rank_num
FROM ranked
WHERE rank_num <= 5
ORDER BY rank_num;
